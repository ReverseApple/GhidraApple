package lol.fairplay.ghidraapple.core.blocks

import ghidra.program.database.ProgramBuilder
import ghidra.program.model.data.TerminatedStringDataType
import ghidra.test.AbstractGhidraHeadedIntegrationTest
import lol.fairplay.ghidraapple.actions.markasblock.ApplyNSConcreteGlobalBlock
import lol.fairplay.ghidraapple.core.createFunction
import org.junit.jupiter.api.Test
import kotlin.test.assertEquals

@Suppress("ktlint:standard:max-line-length")
class BlockTests : AbstractGhidraHeadedIntegrationTest() {
    @Test
    fun testGlobalBlockWithArgs() {
        val builder = ProgramBuilder("airportd", "AARCH64:LE:64:AppleSilicon")

        builder.createLabel("1001945c0", "__NSConcreteGlobalBlock")

        // Create global block
        builder.setBytes(
            "100156148",
            bytes(0xc0, 0x45, 0x19, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xea, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x61, 0x15, 0x00, 0x01, 0x00, 0x00, 0x00),
        )

        // Create descriptor
        builder.setBytes(
            "100156128",
            bytes(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xd4, 0x12, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
        )

        // Add signature string "v32@?0@\"NSError\"8@\"NSArray\"16@\"NSURL\"24" as bytes

        builder.setBytes("10012d4aa", """v32@?0@"NSError"8@"NSArray"16@"NSURL"24""".toByteArray(Charsets.US_ASCII) + byteArrayOf(0))

        // TODO: Currently we rely on this string already being created, this seems like an unnecessary assumption
        builder.applyStringDataType("10012d4aa", TerminatedStringDataType.dataType, 1)

        val invokeFunction =
            builder.createFunction(
                "10002ead0",
                bytes(0x7f, 0x23, 0x03, 0xd5, 0xff, 0x43, 0x01, 0xd1, 0xf6, 0x57, 0x02, 0xa9, 0xf4, 0x4f, 0x03, 0xa9, 0xfd, 0x7b, 0x04, 0xa9, 0xfd, 0x03, 0x01, 0x91, 0xf3, 0x03, 0x03, 0xaa, 0xe0, 0x03, 0x01, 0xaa, 0x28, 0x09, 0x00, 0xf0, 0x08, 0xc1, 0x42, 0xf9, 0x15, 0x01, 0x40, 0xf9, 0x28, 0x09, 0x00, 0xf0, 0x08, 0xbd, 0x42, 0xf9, 0x16, 0x01, 0x40, 0xb9, 0x76, 0x1b, 0x03, 0x94, 0xf4, 0x03, 0x00, 0xaa, 0xe0, 0x03, 0x13, 0xaa, 0xa3, 0x2d, 0x03, 0x94, 0xf4, 0x03, 0x01, 0xa9, 0xf5, 0x5b, 0x00, 0xa9, 0xe1, 0x07, 0x00, 0xf0, 0x21, 0x48, 0x13, 0x91, 0x80, 0x00, 0x80, 0x52, 0x49, 0x03, 0x03, 0x94, 0xfd, 0x7b, 0x44, 0xa9, 0xf4, 0x4f, 0x43, 0xa9, 0xf6, 0x57, 0x42, 0xa9, 0xff, 0x43, 0x01, 0x91, 0xff, 0x0f, 0x5f, 0xd6),
            )

        builder.tx<Exception> {
            ApplyNSConcreteGlobalBlock(builder.addr("100156148")).applyTo(builder.program)
        }

        builder.program.listing.getDataAt(builder.addr("100156148")).dataType.toString()

        // The invoke function should have the global block as the first argument, and appropriate second and third arguments
        assertEquals("NSError *64", invokeFunction.parameters[1].dataType.toString())
        assertEquals("NSArray *64", invokeFunction.parameters[2].dataType.toString())
        assertEquals("NSURL *64", invokeFunction.parameters[3].dataType.toString())
    }
}
